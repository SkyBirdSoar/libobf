$© = {};-> { _m = %i[call length ord chr reduce]; $©[?.] = ->_,*__,&___{____=__.shift;___=__.pop if (!block_given? and __.last.to_proc rescue false);_.public_send ____, *__, &___}; $©[?.<<?!] = ->_,*__,&___{____=__.shift;___=__.pop if (!block_given? and __.last.to_proc rescue false);_.send ____, *__, &___}; $©[?.<<?.] = ->_,*__,&___{$©[?.][_,_m[0],*__,&___]}; $©[?+] = ->_,*__{$©[?.].(__,_m[4],_){|_,__|__.is_a?(Array) ? ($©[?.][_,__.shift,*__]):$©[?.][_,__]}}; $©[?$] = ->_,__=''{_*__}; $©[?s<<??] = ->_{_=~/$/}; $©[??] = ->_{$©[?.][_,_m[1]]}; $©[?_] = ($$-$$).freeze; $©[?-] = ($$/$$).freeze; $©[?2] = ->_{_**(($©[?-]+$©[?-])**(-$©[?-]))}; $©[?3] = ->_{_**(($©[?-]+$©[?-]+$©[?-])**(-$©[?-]))}; $©[?_<<?f] = $©[?3][$©[?-]+$©[?-]]-$©[?3][$©[?-]+$©[?-]]; $©[?i] = ($©[?-]/$©[?_<<?f]).freeze; $©[?N] = ($©[?_<<?f]/$©[?_<<?f]).freeze; $©[?i<<?'] = ($©[?2][-$©[?i]-$©[?i]]).freeze; $©[?N<<?'] = ($©[?-]/($©[?2][-$©[?-]]-$©[?2][-$©[?-]])).freeze; $©[?o] = ->_{$©[?.][_,_m[2]]}; $©[?c] = ->_{$©[?.][_,_m[3]]}; $©[?s] = ''.freeze}.call();def $©.methods; $©.keys;end;def $©.encode _; _m = %i[to_s partition empty? unshift map]; _=$©[?.][_,_m[0]]; a =->_{$©[?.][_,_m[1],%r{(.)\1{0,}}]}; b =->_{$©[?.][_,_m[2]]? []:(_=a[_];$©[?.][b[_[$©[?-]+$©[?-]]],_m[3],_[$©[?-]]])}; c =->_{_=~%r'$'}; $©[?+][b[_],[_m[4], ->_{[_[$©[?_]],$©[?.<<?.][c,_]]}]];end;def $©.decode _; $©[?.][_,:reduce,$©[?s],->_,__{_+(__[$©[?_]]*__[$©[?-]])}];end;def $©.obscure _; _=$©[?+][_,:to_s,:chars,[:map,->_{$©[?.][$©,:encode,$©[?o][_]]}]];end;def $©.reverse _; a=->_,__{_+$©[?c][$©[?+][$©,[:decode,__],:to_i]]}; _=$©[?+][_,[:reduce,$©[?s],a],:intern];end;-> {$©[?[]=->_{$©[?.][$©,:obscure,_]}; $©[?:]=->_{$©[?.][$©,:reverse,_]}; $©[?e]=->_{$©[?.][$©,:encode,_]}; $©[?d]=->_{$©[?.][$©,:decode,_]}}.call();alias $-o $©